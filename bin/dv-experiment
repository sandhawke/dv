#!/bin/bash
# -*-mode: sh-mode -*-
set -euo pipefail
source $(dv-path lib/output.sh)
trap 'echo bash error line ${LINENO} "${BASH_COMMAND}" returned "$?"' ERR

if [ -z "${ANTHROPIC_API_KEY:-}" ]; then
    echo "ERROR: missing ANTHROPIC_API_KEY" >&2
    exit 1
fi

usage() {
    cat <<EOF
Usage: $0 config-file...

Options:
  --help        Display this help message and exit.

Description:
Starts an experiment for each provided config-file. Each file is
a sh env file, providing values for one or more values used to
configure an experimental run.
Values are:
   name=        (defaults to config filename)
   template=    (defaults to node20)
   spec=        (required)
EOF
    exit 1
}

expts=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        --help)
            usage
            ;;
        --*)
            echo "Unknown option: $1" >&2
            usage
            ;;
        *)
            expts+=("$1")
            shift
            ;;
    esac
done

if [ ${#expts[@]} -eq 0 ]; then
    usage
fi

H="./runs"
mkdir -p "$H"

for file in "${expts[@]}"; do
    name="$file"
    template="node20"
    spec="Specification not yet provided. Please stand by."
    
    source "./$file"
    
    pushd "$(mktemp --tmpdir="$H" -d "run-${name}-XXXXXX")"
    dv-init "$template"
    mkdir -p docs
    echo "$spec" > docs/spec.md
    git add -A
    git commit -m 'configured for experiment'
    info "Looping in $(pwd)"
    # maybe we want to pop terminal or file browser there?
    dv-loop || echo "dv-loop error exit"
    pwd
    popd
done
