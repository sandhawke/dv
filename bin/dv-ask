#!/bin/bash
source $(dv-path lib/common.sh) # -*-mode: sh-mode -*-

cmd=$(basename $0)
usage() {
    cat <<EOF

Usage: $cmd [--help] [--prompt=PROMPT] [PATH...]
Feed the given paths to the AI with the given prompt. Print the response.
If you want the AI to give back files or edits, use dv-prompt or dv-commit.

Options:
  --help           Show this help message and exit
  -p|--prompt=PROMPT  Use PROMPT string or saved prompt by name

Saved prompts found in $(dv-path prompts)
EOF
    exit 1
}

prompt=""
paths=()

while [[ $# -gt 0 ]]; do
    case $1 in
        --help)
            usage
            ;;
        --prompt=*)
            prompt=$(cut <<<"$1" -c 10-)
            shift
            ;;
        -p*)
            prompt=$(cut <<<"$1" -c 3-)
            shift
            ;;
        --prompt|-p)
            if [ -z "$2" ]; then
                echo "Error: --prompt requires an argument" >&2
                exit 1
            fi
            prompt="$2"
            shift 2
            ;;
        *)
            paths+=("$1")
            shift
            ;;
    esac
done

if [ ${#paths[@]} -eq 0 ]; then
    if [ -z "$prompt" ]; then
        echo "At minumum a prompt or file is required."
        usage
    fi
fi

# Process prompt if provided
if [ -n "$prompt" ] && [[ ! "$prompt" =~ " " ]] && [[ ! "$prompt" =~ "/" ]]; then
    prompt_file="$(dv-path prompts)/$prompt"
    prompt=$(< $prompt_file)
fi

# Print gathered values
echo "Prompt: $prompt"
arguments "${paths[@]}"

infile=$( mktemp --tmpdir dv-to-ai-XXXXXX.mime)
outfile=$(mktemp --tmpdir dv-from-ai-XXXXXX)

prompt_arg="--ignore=.no-op-arg" # no-op arg hack since "" would cause problems
if [ -n "$prompt" ];then
    prompt_arg="user-prompt=$prompt"
fi

packmime "$prompt_arg" "${paths[@]}" --ignore=.dv --ignore=_from_developer --ignore=package-lock.json --ignore='*~' > $infile

info Sending $infile to LLM...
export LLPIPE_LOG_RESPONSE=/tmp/response-headers.$$.txt
llpipe <$infile >$outfile
info Response headers saved to $LLPIPE_LOG_RESPONSE

success $(< $outfile)
info Saved in $outfile
