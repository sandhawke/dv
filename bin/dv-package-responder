#!/bin/bash
source $(dv-path lib/common.sh) # -*-mode: sh-mode -*-

spec="Agent handling package requests, using some combination of
searching for existing packages and implementing what's needed.

Likely to include some node.js ideas of what packages are, for now."

state="$(dv-state package-responder)"
log_debug "keeping state in '$state'"
out="${DV_OUTPUT_TO:-}"

function responded() {
    local filename="$1"
    local outfile="$2"
    local tool="$3"
    
    rm -f "$filename"
    git add "$filename" || true
    git add "$outfile"
    git commit -q -m"dv-package-responder using $tool"
    
    if [[ -n "$out" ]]; then
        echo "$1" >> "$out/responded"
    fi
}

function main() {
    shopt -s nullglob
    for req in "$(dv-project-dir)/team-notes/"package-request*md; do
        # in theory if there are multiple ones, we could run them in parallel
        respond "$req"
    done
}

function respond() {
    local filename="$1"
    local text_of_request="$(< "$filename")"
    log_debug "Responding to package request '$filename' beginning '$(printf "%-.30s" "$text_of_request")'"

    trailer="

# Background

This package guidance was created in response to the following package request:

$text_of_request
"
    
    # could search and implement in parallel, then compare, but for now
    # we'll search first

    local sub="$state/search"
    mkdir -p "$sub"
    DV_OUTPUT_TO="$sub" dv-package-search "$text_of_request"
    if [[ -f "$sub/name" ]]; then
        local name=$(<"$sub/name")
        local outfile="team-notes/use-package-${name}.md"
        if [[ -f "$outfile" ]]; then
            log_error "responding to package request $filename, name $outfile is already taken"
            exit 1
        fi
        cat > "$outfile" << _END
We should use NPM package '$name'. We should add the dependency into package.json, if it's not there, and use import statements as necessary in Javascript to make use of it where appropriate.

Usage Guide:

$(<"$sub/guide.md")$trailer
_END
        rm -f "$filename"
        git add "$filename" || true
        git add "$outfile"
        git commit -q -m'dv-package-responder using search'
        responded "created $outfile"
        return
    fi

    log_info "unable to find suitable package, proceeding to make one"

    sub="$state/make"
    mkdir -p "$sub"
    DV_OUTPUT_TO="$sub" dv-package-make "$text_of_request"
    log_debug "dv-package-make results to $sub"
    if [[ -f "$sub/guide.md" ]]; then
        local name=$(<"$sub/name")
        # this might not be unique, but dv-path-create doesn't yet allow suffix like .md
        local outfile="team-notes/use-package-${name}.md"
        if [[ -f "$outfile" ]]; then
            log_error "responding to package request $filename, name $outfile is already taken"
            exit 1
        fi
        cat > "$outfile" << _END
We should import package '$mk_name' which is hosted locally at pathname '$mk_relative_path'. We should add that dependency into package.json, if it's not there, and use an import statement to import the documented functions from that relative path.

Usage guide:

$(<"$sub/guide.md")$trailer
_END
        responded "$filename" "$outfile" "maker"
    else
        cat > "$outfile" << _END
Unfortunately, our package search and creation service reports being unable to find or create a package to meet the below request. Consider refactoring and submitting a simpler request or one which better aligns with things existing packages do.

$trailer
_END
        responded "$filename" "$outfile" "rejection-handler"
    fi
}

main

