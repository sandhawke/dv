#!/bin/bash
#
# Example
#
# echo 'In exactly one word, what color is the night sky' | dv-simple-pipe
#
# Coded by Claude 3.5 Sonnet with the prompt:
#
# Can you write me bash script which sends its stdin as the user prompt to Claude and sends to stdout the assistant response text. Use model "claude-3-5-sonnet-latest" and max_tokens 8192. Use jq to properly quote in input and extract the output. Check if the ouput json has an error set, and output the full json.  Otherwise, the output we want is at '.content[0].text'.


# Check if ANTHROPIC_API_KEY is set
if [ -z "$ANTHROPIC_API_KEY" ]; then
    echo "Error: ANTHROPIC_API_KEY environment variable is not set" >&2
    exit 1
fi

# Read stdin into a variable
prompt=$(cat)

# Construct the JSON payload
# Using jq to properly escape the prompt string
json_payload=$(jq -n \
    --arg prompt "$prompt" \
    '{
        "model": "claude-3-5-sonnet-latest",
        "max_tokens": 8192,
        "messages": [
            {
                "role": "user",
                "content": $prompt
            }
        ]
    }')

# Make the API call and store the response
response=$(curl -s \
    -H "Content-Type: application/json" \
    -H "x-api-key: $ANTHROPIC_API_KEY" \
    -H "anthropic-version: 2023-06-01" \
    -d "$json_payload" \
    https://api.anthropic.com/v1/messages)

# Check if response is valid JSON
if ! echo "$response" | jq -e . >/dev/null 2>&1; then
    echo "Error: Invalid JSON response from API" >&2
    echo "$response" >&2
    exit 1
fi

# Check if there's an error in the response
if echo "$response" | jq -e 'has("error")' >/dev/null; then
    # Output full JSON if there's an error
    echo "$response"
    exit 1
fi

# Extract and output the assistant's response text
echo "$response" | jq -r '.content[0].text'
