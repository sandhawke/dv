#!/bin/bash
#  -*-mode: sh-mode -*-

starts=5
fixes=5

# Function to start the timer
# from claude https://claude.ai/chat/666b5bbd-2f26-4114-b454-a4ff1b30cde2
start_timer() {
    START_TIME=$(date +%s)
    # echo "Timer started."
}

# Function to end the timer and print stats
end_timer() {
    local end_time=$(date +%s)
    local elapsed=$((end_time - START_TIME))
    
    echo "Seconds elapsed: $elapsed"
    
    # More detailed breakdown
    local days=$((elapsed / 86400))
    local hours=$(( (elapsed % 86400) / 3600 ))
    local minutes=$(( (elapsed % 3600) / 60 ))
    local seconds=$((elapsed % 60))
    
    echo "Time elapsed: $days days, $hours hours, $minutes minutes, $seconds seconds"
}

build() {
    echo build
}

improve() {
    echo send errors
}

# Global variable to store start time
START_TIME=0
start_timer

for ((i=1; i<=$starts; i++))
do
  echo
  echo "Asking for a fresh build (fresh start $i)"
  date
  build

  if run-tests
  then
      echo The build passed all tests
      end_timer
      exit 0
  else
      echo The build did not pass all tests, trying fix-it loop
      for ((j=1; j<=$fixes; j++))
      do
          echo "Asking for fixes, iteration $j (fresh start $i)"

          date
          improve

          if run-tests
          then
              echo This latest build worked
              end_timer
              exit 0
          fi
      done
  fi
done
          
echo "After $starts fresh starts and $fixes changes to fix it (per start), nothing passed the tests"
end_timer
