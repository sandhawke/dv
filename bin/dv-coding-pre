#!/bin/bash
source $(dv-path lib/common.sh) # -*-mode: sh-mode -*-


source $(dv-path lib/load-env.sh)

# build a fresh _to_developer directory.  we'll clear _from_developer
# after this is done.

rm -rf _to_developer
mkdir _to_developer

if [ -f setup.sh ]; then
    bash setup.sh
fi

if [ -d _references ]; then
    cp -a _references _to_developer/references
fi

if [ -d _from_developer/tool-request ]; then
    echo $'\n\n***TOOL REQUESTED!'
    find _from_developer/tool-request
    echo
    dv-tool-runner
fi

env='_from_developer/setenv'
if [ -f "$env" ]; then
    load_env "$env"
fi

if [ ! -d _to_developer/test-results ]; then
    dv-test || echo "One or more tests failed"
else
    echo "Re-using existing _to_developer/test-result"
fi

# Expose recent git commits, which is kind of like chat
# conversation history.
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    RECENT_COMMITS=${RECENT_COMMITS:-0}
    if [ "$RECENT_COMMITS" -ge 1 ]; then
        echo Including $RECENT_COMMITS recent commits
        mkdir -p _to_developer/recent-commits
        pushd _to_developer/recent-commits
        git log -n $RECENT_COMMITS > git-log
        git log -n $RECENT_COMMITS --pretty=format:"%H" | while read commit; do
            # Save each commit's diff to a file named after its hash
            git show $commit > "${commit}.diff"
            test -s "${commit}.diff" || rm "${commit}.diff"
        done
        popd
    fi
else
    echo WARNING: not using git, so not providing change history to AI
fi

# delete any empty directories, even though they don't normally get sent
find . -type d -empty -delete

rm -rf _from_developer
mkdir _from_developer
