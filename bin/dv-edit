#!/bin/bash
source $(dv-path lib/common.sh) # -*-mode: sh-mode -*-

cmd=$(basename $0)
usage() {
    cat <<EOF

Usage: $cmd [--help] [arguments]

Feed the given paths to the AI with the given prompt. Will only modify files
that are checked in and clean. Arguments are used for packmime and unpackmime.

Will include DV_PROMPT value as a prompt, if set.

Options:
  --help           Show this help message and exit
EOF
    exit 1
}

c1=()
c2=()

while [[ $# -gt 0 ]]; do
    case $1 in
        --help)
            usage
            ;;
        --force|--patch|--preserve|--dryrun|--exclude-from)
            # unpackmime args
            c2+=("$1)
            shift
            ;;
        --use-ignore-file)
            # both args
            c1+=("$1)
            c2+=("$1)
            shift
            ;;
        *)
            # default to packmime args
            c1+=("$1")
            shift
            ;;
    esac
done

infile=$( mktemp --tmpdir dv-to-ai-XXXXXX.mime)
outfile=$(mktemp --tmpdir dv-from-ai-XXXXXX.mime)
response_prompt=$(< $(dv-path prompts/response-format.md))
log=$DVDIR/edit-log

echo IN PROGRESS
exit 1

mkdir -p .dv/edit-log

# maybe not for us here --- dv-coding-pre
mkdir -p _to_developer # too hard to optionally include it
mkdir -p _from_developer 

log_info running packmime 
packmime user-prompt=$"$prompt" "${paths[@]}" --ignore="*~" --ignore=.dv --include=_to_developer --ignore=_from_developer --ignore=package-lock.json response-format-instructions=$"$response_prompt" > $infile
t=$(dv-timestamp)
cp -a _to_developer .dv/to-and-from/$t-to
cp -a $infile .dv/to-and-from/$t-to

info Sending $infile to LLM...
info And reading response into $outfile
export LLPIPE_LOG_RESPONSE=.dv/to-and-from/$t-to/response-headers.txt
llpipe <$infile >$outfile

unpack=$(unpackmime --patch $outfile)
echo $unpack

from=.dv/to-and-from/$(dv-timestamp)-from
info saving _from_developer to $from
mkdir -p "$from"
echo "$unpack" > "$from"/unpack.txt
cp -a _from_developer "$from"
cp -a $outfile "$from"
if [ -f explanation ]; then
    cp -a explanation "$from"
fi

# since this is really just about 'explanation' currently
dv-coding-post

info "Using $infile $outfile"
