#!/bin/bash
source $(dv-path lib/common.sh) # -*-mode: sh-mode -*-

: ${DV_INSTALL:=node20-a}
: ${DV_SEQ:=dv-sequence-basic}

challenge=$1
challenge_dir=$(dv-path challenges/$challenge)
if [ ! -d $challenge_dir ]; then
    log_error Not found $challenge_dir
    exit 1
fi

cell="$(dv-cell-create "$challenge" "$@")"
log="$cell/.dv/challenge"
mkdir -p "$log"
printenv > "$log/env"
date -uIns > "$log/start"

cd "$challenge_dir/starting_files"
rsync -avv . "$cell"

# we could just --ignore these, but they seem more a cause for concern
if [ -d "$cell/_to_developer" ]; then
    log_error $PWD seems to have a _to_developer
    exit 1
fi

cd "$cell"
git add -A; git commit -m"starting files for challenge '$challenge'"

## Pick a system to install?  That's a indep. var, right?
dv-install cltest
dv-install "$DV_INSTALL"

run="$challenge_dir/run.sh"
if [ -f "$run" ]; then
    bash "$run" || log_warning "$run non-zero exit"
else
    # make this an argument ? something like the.
    if $DV_SEQ; then
        date > .dv/challenge-pass
        log_success "dv-challenge-run completed successfully in $cell"
        echo "pass" > "$log/pass"
    else
        date > .dv/challenge-fail
        log_warning "dv-challenge-run failed in $cell"
        echo "fail" > "$log/fail"
    fi
fi

date -uIns > "$log/stop"

changed_files="$(mktemp -d)"
cd "$challenge_dir/starting_files"
rsync -avv --backup --backup-dir="$changed_files" . "$cell"
if [ -d "$changed_files" ]; then
    log_error "Challenger modified challenge files. Mods in $changed_files"
    echo "Cheated, modified $(ls "$changed_files")" > "$log/cheated"
    exit 1
fi

